model:
  base_learning_rate: 1.5e-04
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.0015
    linear_end: 0.0195
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    cond_stage_config:
      target: dataset.ReadDictEmbedder
      params:
        key: class_label
    first_stage_key: image # key til batch dict for pixel input
    cond_stage_key: class_label # if different from first_stage_key, this will be input so ddpm
    image_size: 64 # used for z_T sampling
    channels: 2 # used for z_T sampling
    cond_stage_trainable: false # in the batch for the datalaoder, give vertebrae_embedding as tensor the same dim order as image
    conditioning_key: crossattn # I think this is the best
    monitor: val/loss_simple_ema
    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 64
        in_channels: 2
        model_channels: 32
        out_channels: 2
        num_res_blocks: 2
        attention_resolutions:
        - 2
        - 3
        - 4
        channel_mult:
        - 1
        - 3
        - 3
        - 4
        conv_resample: false
        num_head_channels: 16
        use_spatial_transformer: true
        transformer_depth: 1
        context_dim: 256
    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        ckpt_path: ./logs/2024-09-30T00-11-53_config/checkpoints/epoch=000154.ckpt
        monitor: val/rec_loss
        embed_dim: 2
        ddconfig:
          double_z: true
          z_channels: 2
          resolution: 256
          in_channels: 1
          out_ch: 1
          ch: 32
          ch_mult:
          - 1
          - 2
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 16
    wrap: false
    train:
      target: dataset.AutoEncoderDataset
      params:
        csv_file: './data/data/dataframe.csv'
        data_root_dir: './data/'
        mode: train
    validation:
      target: dataset.AutoEncoderDataset
      params:
        csv_file: './data/data/dataframe.csv'
        data_root_dir: './data/'
        mode: val
